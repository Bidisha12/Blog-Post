{"version":3,"sources":["components/AddContact/index.js","components/EditContact/index.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["connect","state","contacts","dispatch","addContact","data","type","payload","useState","title","settitle","catagory","setcatagory","content","setcontent","history","useHistory","className","onSubmit","e","preventDefault","checkContactcatagoryExists","filter","contact","checkContactcontentExists","toast","warning","length","error","id","success","push","placeholder","value","onChange","target","onClick","updateContact","useParams","currentContact","find","parseInt","useEffect","deleteContact","to","scope","map","FormControlLabel","control","Checkbox","icon","checkedIcon","name","label","style","marginLeft","Navbar","App","exact","path","component","initialState","email","phone","store","createStore","action","contactFilter","contactUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.aed06b80.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst AddPost = ({ contacts, addContact }) => {\n  const [title, settitle] = useState(\"\");\n  const [catagory, setcatagory] = useState(\"\");\n  const [content, setcontent] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactcatagoryExists = contacts.filter((contact) =>\n      contact.catagory === catagory ? contact : null\n    );\n    const checkContactcontentExists = contacts.filter((contact) =>\n      contact.content === content ? contact : null\n    );\n\n    if (!catagory || !title || !content) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactcatagoryExists.length > 0) {\n      return toast.error(\"This catagory already exists!!\");\n    }\n    if (checkContactcontentExists.length > 0) {\n      return toast.error(\"This content number already exists!!\");\n    }\n\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      catagory,\n      title,\n      content,\n    };\n\n    addContact(data);\n    toast.success(\"Contact added successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Post</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={(e) => settitle(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Categories\"\n                value={catagory}\n                onChange={(e) => setcatagory(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Content\"\n                value={content}\n                onChange={(e) => setcontent(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n             \n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"button\"\n                value=\"Cancel\"\n                onClick={() => history.push(\"/\")}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (data) => {\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = ({ contacts, updateContact }) => {\n  const { id } = useParams();\n  const history = useHistory();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    settitle(currentContact.title);\n    setcatagory(currentContact.catagory);\n    setcontent(currentContact.content);\n  }, [currentContact]);\n\n  const [title, settitle] = useState(\"\");\n  const [catagory, setcatagory] = useState(\"\");\n  const [content, setcontent] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactcatagoryExists = contacts.filter((contact) =>\n      contact.catagory === catagory && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n    const checkContactcontentExists = contacts.filter((contact) =>\n      contact.content === content && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n\n    if (!catagory || !title || !content) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactcatagoryExists.length > 0) {\n      return toast.error(\"This catagory already exists!!\");\n    }\n    if (checkContactcontentExists.length > 0) {\n      return toast.error(\"This content number already exists!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      catagory,\n      title,\n      content,\n    };\n\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history.push(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={title}\n                  placeholder={\"Title\"}\n                  onChange={(e) => settitle(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={catagory}\n                  placeholder={\"Catagories\"}\n                  onChange={(e) => setcatagory(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={content}\n                  placeholder={\"Content\"}\n                  onChange={(e) => setcontent(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => history.push(\"/\")}\n                >\n                  cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst Home = ({ contacts, deleteContact }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add Post\n        </Link>\n        <div className=\"col-md-10 mx-auto my-4\">\n          <table className=\"table table-hover\">\n            <thead className=\"table-header bg-dark text-white\">\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Catagory</th>\n                <th scope=\"col\">Content</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.length > 0 ? (\n                contacts.map((contact, id) => (\n                  <tr key={id}>\n                    <td>{id + 1}</td>\n                    <td>{contact.title}</td>\n                    <td>{contact.catagory}</td>\n                    <td>{contact.content}</td>\n                    <td>\n                      <Link\n                        to={`/edit/${contact.id}`}\n                        className=\"btn btn-sm btn-primary mr-1\"\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        type=\"button\"\n                        onClick={() => deleteContact(contact.id)}\n                        className=\"btn btn-sm btn-danger\"\n                      >\n                        Delete\n                      </button>\n                      <FormControlLabel\n                          control={<Checkbox icon={<FavoriteBorder />} \n                                    checkedIcon={<Favorite />}\n                            name=\"checkedH\" />}\n                          label=\"Like\"\n                          style = {{ marginLeft : 10}}\n                        />\n                    </td>\n\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <th>No post found</th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => {\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark\">\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\n          back to index page\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\" component={() => <AddPost />} />\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  { id: 0, name: \"Raman Sharma\", email: \"email@email.com\", phone: 1234567890 },\n  { id: 1, name: \"Test Name\", email: \"test@test.com\", phone: 4567891230 },\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_CONTACT\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_CONTACT\":\n      state = [{ name: null, email: null, phone: null }];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/reducers/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}